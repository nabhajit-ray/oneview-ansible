name: CI
on:
- pull_request

jobs:
  sanity:
    name: Sanity (${{ matrix.ansible_version }}-${{ matrix.python_version }})
    strategy:
      matrix:
        python_version: [2.7, 3.5]
        ansible_version: [2.1.5.0, 2.2.2.0, 2.3.0.0, 2.4.0.0]
        exclude:
      # excludes python 3.5 and ansible 2.1 and 2.2
         - python_version: 3.5
           ansible_version: 2.1.5.0        
         - python_version: 3.5
           ansible_version: 2.2.2.0
          
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - name : Setup ansible env
        run:  echo "BRANCH=stable-2.4" >> $GITHUB_ENV
      - name: Set up Ansible ${{ matrix.ansible_version}}
        run: pip install ansible==${{ matrix.ansible_version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install future
          if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Install ansible test
        run: |                   
          if [[ $BRANCH ]]; then 
          git clone -b $BRANCH --single-branch https://github.com/ansible/ansible.git
          source ./ansible/hacking/env-setup
          pip install pyyaml jinja2 nose pytest passlib pycrypto six voluptuous
          fi
      - name: Setup environment for Ansible build
        run: |
         echo "ANSIBLE_LIBRARY=$PWD/library" >> $GITHUB_ENV
         echo "ANSIBLE_MODULE_UTILS=$ANSIBLE_LIBRARY/module_utils" >> $GITHUB_ENV
         echo "PYTHONPATH=$ANSIBLE_LIBRARY:$PYTHONPATH" >> $GITHUB_ENV
         echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALL_TOKEN }}" >> $GITHUB_ENV
         touch examples/vars/config.yml
         coverage run --source=library/ -m pytest test/
         ./build.sh
     
      - name: coveralls
        uses: AndreMiras/coveralls-python-action@develop        
        with:
          github-token: ${{ secrets.COVERALL_TOKEN }}
          parallel: true
          flag-name: 'Unit Test'
          debug: true

  coveralls_finish:
      needs: sanity
      runs-on: ubuntu-latest
      steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
          debug: true
      
        
    
 
